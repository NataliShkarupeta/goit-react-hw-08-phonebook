{"version":3,"file":"static/js/133.4d4bacaf.chunk.js","mappings":"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","sources":["components/ifNotRegister/ifNotRegister.styled.js","components/Input/inputName.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","components/Input/InputName.jsx","components/NameBlock/NameBlock.styled.js","components/NameBlock/NameBlock.jsx","components/DefaultStylse.styled.js","components/Input/InputFind.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/personalPage/personalPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\n export const WrapPage = styled.div`\n width: 80%;\n margin-left: auto;\n margin-right: auto;\n margin-top: 50px;\n   padding: 20px;\n border: 3px solid  #42a2bc;\n `;\n\n export const P = styled.p`\n text-align: center;\n font-size: 25px;\n `","import styled from \"styled-components\";\n\nexport const Input = styled.input`\nwidth: 230px;\ndisplay: block;\nheight: 20px;\nmargin-bottom: 30px;\ntext-decoration: none;\n`\nexport const Label = styled.label`\n  margin: 0;\n  padding: 0;\n  font-weight: 400;\n  font-size: 25px;\n  margin-bottom: 5px;\n`;","import styled from \"styled-components\";\n\nexport const But = styled.button`\nwidth: 100px;\n  display: block;\n  background: #42a2bc;\n  color: white;\n  border-color: transparent;\n  border-radius: 5px;\n  padding: 5px;\n  -webkit-transition: color 0.3s ease-out;\n  transition: color 0.3s ease-out;\n  &:focus {\n    background: #42a2bc;\n    outline: none;\n    -webkit-transition: color 0.3s ease-out;\n    transition: color 0.3s ease-out;\n  }\n  &:hover {\n    color: #777;\n    background: #52cfeb;\n  }\n`;\n\n","import { But } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClicked, text, disabled }) => {\n  return (\n    <But type=\"button\" onClick={onClicked} disabled={disabled}>\n      {text}\n    </But>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClicked: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { Input } from './inputName.styled';\nimport { Label } from './inputName.styled';\nimport { Button } from 'components/Button/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/operations/operationsContacts';\nimport { selectorContact } from 'redux/selector';\n\nexport const InputName = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(selectorContact);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const takeInputValue = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    const match = contact.find(\n      contact => contact.name === name && contact.number === number\n    );\n    if (match) {\n      alert(`${name} already in contacts!!!`);\n    } else {\n      const cont = {\n        name,\n        number,\n      };\n      dispatch(addContacts(cont));\n      setName('');\n      setNumber('');\n    }\n  };\n  return (\n    <>\n      <Label htmlFor={name}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={takeInputValue}\n          value={name}\n          required\n        />\n      </Label>\n      <Label htmlFor={number}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={takeInputValue}\n          value={number}\n        />\n      </Label>\n      {name !== '' && number !== '' ? (\n        <Button onClicked={handelSubmit} text=\"Add contact\" />\n      ) : (\n        <Button\n          onClicked={handelSubmit}\n          text=\"Add contact\"\n          disabled=\"disabled\"\n        />\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const H1= styled.h1`\nmargin-bottom: 20px;\n`","import { H1 } from \"./NameBlock.styled\";\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ text }) => {\n  return <H1>{text}</H1>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n  width: 400px;\n  margin: 5px;\n  border: 2px solid #42a2bc;\n  padding: 10px;\n  margin-bottom: 30px;\n  border-radius: 4px;\n`;\n\n\n","import { Input } from './inputName.styled';\nimport { Label } from './inputName.styled';\nimport { Wrap } from 'components/DefaultStylse.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cangeArreyByFind } from 'redux/slice/filterNameSlice';\n\nexport const InputFind = () => {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  const handelChange = ({ target: { value } }) => {\n    dispatch(cangeArreyByFind(value));\n  };\n\n  return (\n    <Wrap>\n      <Label>\n        Find contact by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handelChange}\n        />\n      </Label>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 20px;\n  margin-bottom: 20px;\n  font-weight: 400;\n  font-size: 25px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n","import { Item,Ul } from './Contacts.styled';\nimport { Button } from 'components/Button/Button';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/operations/operationsContacts';\n\nexport const Contacts = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  if (!contact) {\n    return;\n  }\n\n  return (\n    <Ul>\n      {contact.map(({ name, number, id }) => (\n        <Item key={id}>\n          {name} :{number}{' '}\n          <Button\n            text=\"Delete\"\n            onClicked={() => dispatch(deleteContacts(id))}\n          />\n        </Item>\n      ))}\n      \n    </Ul>\n  );\n};\n\nContacts.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","import { InputName } from 'components/Input/InputName';\nimport { Title } from 'components/NameBlock/NameBlock';\nimport { Wrap } from 'components/DefaultStylse.styled';\nimport { InputFind } from 'components/Input/InputFind';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport {\n  selectorIsLoading,\n  selectorError,\n  selectorFilterArreyContacts,\n} from 'redux/selector';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ButtonBack } from '../registerForm/registerForm.styled';\nimport { useLocation, Link, Outlet } from 'react-router-dom';\nimport {  ContactsBlock, WrapBlock } from './personalPage.styled';\nimport { WrapPage } from 'components/ifNotRegister/ifNotRegister.styled';\n\nimport { fetchContacts } from 'redux/operations/operationsContacts';\n\n const PersonalPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectorIsLoading);\n  const error = useSelector(selectorError);\n  const cangeArreyContacts = useSelector(selectorFilterArreyContacts);\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  \n  return (\n    <>\n      <>{error && <p>{error}</p>}</>\n      <WrapPage>\n          <Link to={location.state?.from ?? '/'}>\n            <ButtonBack>Back</ButtonBack>\n          </Link>\n          <Outlet />\n        <ContactsBlock>\n          <WrapBlock >\n            <Title text=\" Add contact\" />\n            <Wrap>\n              <InputName />\n            </Wrap>\n            <Title text=\"Find contact\" />\n            <InputFind />\n          </WrapBlock>\n          <div>\n            {isLoading ? (\n              <p>Loading...</p>\n            ) : (\n              <>\n                <Title text=\"Your contacts: \" />\n                <Contacts contact={cangeArreyContacts} />\n              </>\n            )}\n          </div>\n        </ContactsBlock>\n      </WrapPage>\n    </>\n  );\n};\n\nexport default PersonalPage;"],"names":["WrapPage","styled","Input","Label","But","Button","onClicked","text","disabled","type","onClick","InputName","dispatch","useDispatch","contact","useSelector","selectorContact","useState","name","setName","number","setNumber","takeInputValue","evt","target","value","handelSubmit","e","preventDefault","find","alert","cont","addContacts","htmlFor","pattern","title","onChange","required","H1","Title","Wrap","InputFind","filter","state","cangeArreyByFind","Item","Ul","Contacts","map","id","deleteContacts","isLoading","selectorIsLoading","error","selectorError","cangeArreyContacts","selectorFilterArreyContacts","location","useLocation","useEffect","fetchContacts","to","from"],"sourceRoot":""}