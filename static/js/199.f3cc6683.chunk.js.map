{"version":3,"file":"static/js/199.f3cc6683.chunk.js","mappings":"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","sources":["components/Input/inputName.styled.js","components/Button/Button.styled.js","components/Button/Button.jsx","redux/contacts/contactsSelectors.js","components/Input/InputName.jsx","components/NameBlock/NameBlock.styled.js","components/NameBlock/NameBlock.jsx","components/Input/InputFind.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filterContact/filterContactSelectors.js","pages/personalPage/personalPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Input = styled.input`\nwidth: 230px;\ndisplay: block;\nheight: 20px;\nmargin-bottom: 30px;\ntext-decoration: none;\n`\nexport const Label = styled.label`\n  margin: 0;\n  padding: 0;\n  font-weight: 400;\n  font-size: 25px;\n  margin-bottom: 5px;\n`;","import styled from \"styled-components\";\n\nexport const But = styled.button`\nwidth: 100px;\n  display: block;\n  background: #42a2bc;\n  color: white;\n  border-color: transparent;\n  border-radius: 5px;\n  padding: 5px;\n  -webkit-transition: color 0.3s ease-out;\n  transition: color 0.3s ease-out;\n  &:focus {\n    background: #42a2bc;\n    outline: none;\n    -webkit-transition: color 0.3s ease-out;\n    transition: color 0.3s ease-out;\n  }\n  &:hover {\n    color: #777;\n    background: #52cfeb;\n  }\n`;\n\n","import { But } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClicked, text, disabled }) => {\n  return (\n    <But type=\"button\" onClick={onClicked} disabled={disabled}>\n      {text}\n    </But>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClicked: PropTypes.func.isRequired,\n};\n","export const selectorContact = state => state.contacts.contacts;\nexport const selectorIsLoading = state => state.contacts.isLoading;\nexport const selectorError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { Input } from './inputName.styled';\nimport { Label } from './inputName.styled';\nimport { Button } from 'components/Button/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/contactsOperations';\nimport { selectorContact } from 'redux/contacts/contactsSelectors';\n\nexport const InputName = () => {\n  const dispatch = useDispatch();\n  const contact = useSelector(selectorContact);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const takeInputValue = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    const match = contact.find(\n      contact => contact.name === name && contact.number === number\n    );\n    if (match) {\n      alert(`${name} already in contacts!!!`);\n    } else {\n      const cont = {\n        name,\n        number,\n      };\n      dispatch(addContacts(cont));\n      setName('');\n      setNumber('');\n    }\n  };\n  return (\n    <>\n      <Label htmlFor={name}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={takeInputValue}\n          value={name}\n          required\n        />\n      </Label>\n      <Label htmlFor={number}>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={takeInputValue}\n          value={number}\n        />\n      </Label>\n      {name !== '' && number !== '' ? (\n        <Button onClicked={handelSubmit} text=\"Add contact\" />\n      ) : (\n        <Button\n          onClicked={handelSubmit}\n          text=\"Add contact\"\n          disabled=\"disabled\"\n        />\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const H1= styled.h1`\nmargin-bottom: 20px;\n`","import { H1 } from \"./NameBlock.styled\";\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ text }) => {\n  return <H1>{text}</H1>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};","import { Input } from './inputName.styled';\nimport { Label } from './inputName.styled';\nimport { Wrap } from 'components/DefaultStylse.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cangeArreyByFind } from 'redux/filterContact/filterContactSlice';\n\nexport const InputFind = () => {\n  const filter = useSelector(state => state.filter.filter);\n  const dispatch = useDispatch();\n\n  const handelChange = ({ target: { value } }) => {\n    dispatch(cangeArreyByFind(value));\n  };\n\n  return (\n    <Wrap>\n      <Label>\n        Find contact by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handelChange}\n        />\n      </Label>\n    </Wrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 20px;\n  margin-bottom: 20px;\n  font-weight: 400;\n  font-size: 25px;\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Ul = styled.ul`\n  margin: 0;\n  padding: 0;\n`;\n","import { Item, Ul } from './Contacts.styled';\nimport { Button } from 'components/Button/Button';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/contactsOperations';\n\nexport const Contacts = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Ul>\n      {contact.map(({ name, number, id }) => (\n        <Item key={id}>\n          {name} :{number}{' '}\n          <Button\n            text=\"Delete\"\n            onClicked={() => dispatch(deleteContacts(id))}\n          />\n        </Item>\n      ))}\n    </Ul>\n  );\n};\n\nContacts.propTypes = {\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\nimport { selectorContact } from 'redux/contacts/contactsSelectors';\n\nexport const selectorFilter = state => state.filter.filter;\n\nexport const selectorFilterArreyContacts = createSelector(\n  selectorFilter,\n  selectorContact,\n  (filter, contact) => {\n    if (filter.length > 0) {\n      return contact.filter(cont =>\n        cont.name.toLowerCase().includes(filter.toLowerCase().trim())\n      );\n    } else {\n      return contact;\n    }\n  }\n);\n","import { InputName } from 'components/Input/InputName';\nimport { Title } from 'components/NameBlock/NameBlock';\nimport { Wrap } from 'components/DefaultStylse.styled';\nimport { InputFind } from 'components/Input/InputFind';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport {\n  selectorError,\n  selectorContact,\n  selectorIsLoading,\n} from 'redux/contacts/contactsSelectors';\n import { selectorFilterArreyContacts } from 'redux/filterContact/filterContactSelectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ButtonBack } from '../registerForm/registerForm.styled';\nimport { useLocation, Link, Outlet } from 'react-router-dom';\nimport { ContactsBlock, WrapBlock, Background } from './personalPage.styled';\nimport { WrapPage } from 'components/DefaultStylse.styled';\nimport { Text } from 'pages/FrontPage/FrontPage.styled';\n\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst PersonalPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectorIsLoading);\n  const error = useSelector(selectorError);\n  const cangeArreyContacts = useSelector(selectorFilterArreyContacts);\n  const location = useLocation();\n  const contacts = useSelector(selectorContact);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Background>\n      <>{error && <p>{error}</p>}</>\n      <WrapPage>\n        <Link to={location.state?.from ?? '/'}>\n          <ButtonBack>Back</ButtonBack>\n        </Link>\n        <Outlet />\n        <ContactsBlock>\n          <WrapBlock>\n            <Title text=\" Add contact\" />\n            <Wrap>\n              <InputName />\n            </Wrap>\n            <Title text=\"Find contact\" />\n            <InputFind />\n          </WrapBlock>\n          {contacts.length === 0 ? (\n            <Text> You don't have contacts yet. </Text>\n          ) : (\n            <div>\n              {isLoading ? (\n                <p>Loading...</p>\n              ) : (\n                <>\n                  <Title text=\"Your contacts: \" />\n                  <Contacts contact={cangeArreyContacts} />\n                </>\n              )}\n            </div>\n          )}\n        </ContactsBlock>\n      </WrapPage>\n    </Background>\n  );\n};\n\nexport default PersonalPage;\n"],"names":["Input","styled","Label","But","Button","onClicked","text","disabled","type","onClick","selectorContact","state","contacts","selectorIsLoading","isLoading","selectorError","error","InputName","dispatch","useDispatch","contact","useSelector","useState","name","setName","number","setNumber","takeInputValue","evt","target","value","handelSubmit","e","preventDefault","find","alert","cont","addContacts","htmlFor","pattern","title","onChange","required","H1","Title","InputFind","filter","cangeArreyByFind","Item","Ul","Contacts","map","id","deleteContacts","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectorFilterArreyContacts","toLowerCase","includes","trim","cangeArreyContacts","location","useLocation","useEffect","fetchContacts","to","from"],"sourceRoot":""}